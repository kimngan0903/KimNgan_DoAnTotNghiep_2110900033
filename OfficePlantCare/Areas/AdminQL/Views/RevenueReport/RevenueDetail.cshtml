@model OfficePlantCare.Areas.AdminQL.Models.RevenueReport

@{
    ViewData["Title"] = Model.ReportType == "Contracts" ? "Báo cáo Doanh thu theo Hợp đồng" : Model.ReportType == "Orders" ? "Báo cáo Doanh thu theo Đơn hàng" : "Báo cáo Doanh thu Tổng hợp";
    Layout = "~/Areas/AdminQL/Views/Shared/Admin.cshtml";
}

<!-- [ Main Content ] start -->
<link rel="stylesheet" href="~/assets/css/index.css?v2" />

<div class="pcoded-main-container">
    <div class="pcoded-content">
        <!-- Page Header -->
        <div class="page-header card shadow-sm border-0">
            <div class="page-block">
                <div class="row align-items-center">
                    <div class="col-md-12">
                        <div class="page-header-title d-flex justify-content-between align-items-center py-3 ml-3">
                            <h5 class="m-0 text-success font-weight-bold">@ViewData["Title"]</h5>
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb mb-0 bg-transparent">
                                    <li class="breadcrumb-item"><a asp-area="AdminQL" asp-controller="RevenueReport" asp-action="RevenueReport"><i class="fas fa-home"></i></a></li>
                                    <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ Filter Form ] start -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-sm border-0">
                    <div class="card-body">
                        <h5 class="card-title text-success d-flex align-items-center"><i class="fas fa-filter mr-2"></i> Lọc Doanh thu</h5>
                        <form asp-action="@(Model.ReportType == "Contracts" ? "ContractRevenue" : "OrderRevenue")" method="get" class="row align-items-end">
                            <div class="col-md-2">
                                <label for="startDate" class="form-label">Từ ngày</label>
                                <input type="date" class="form-control" id="startDate" name="startDate" value="@(ViewBag.StartDate != null ? ((DateTime)ViewBag.StartDate).ToString("yyyy-MM-dd") : "")">
                            </div>
                            <div class="col-md-2">
                                <label for="endDate" class="form-label">Đến ngày</label>
                                <input type="date" class="form-control" id="endDate" name="endDate" value="@(ViewBag.EndDate != null ? ((DateTime)ViewBag.EndDate).ToString("yyyy-MM-dd") : "")">
                            </div>
                            <div class="col-md-8">
                                <button type="submit" class="btn btn-primary mr-2"><i class="fas fa-search mr-2"></i>Lọc</button>
@*                                 <a asp-action="@(Model.ReportType == "Contracts" ? "ExportToExcelContract" : "ExportToExcelOrder")" asp-route-startDate="@(ViewBag.StartDate?.ToString("yyyy-MM-dd"))" asp-route-endDate="@(ViewBag.EndDate?.ToString("yyyy-MM-dd"))" class="btn btn-success"><i class="fas fa-file-excel mr-2"></i>Xuất Excel</a>
 *@                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- [ Main Content ] start -->
        <div class="row">
            <!-- Doanh thu theo ngày -->
            <div class="col-md-4">
                <div class="card h-100" style="background: linear-gradient(135deg, #3f5e83, #6ddfbb); border-radius: 15px; color: #fff; transition: all 0.3s ease;">
                    <div class="card-body text-center d-flex flex-column justify-content-center">
                        <h5 class="card-title"><i class="fas fa-calendar-day mr-2 text-blue"></i> Doanh thu theo ngày</h5>
                        @if (!Model.DailyRevenue.Any() || Model.DailyRevenue.All(r => r.Revenue == 0))
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu trong khoảng thời gian đã chọn.</p>
                        }
                        else
                        {
                            <canvas id="dailyRevenueChart" style="height: 200px;"></canvas>
                        }
                    </div>
                </div>
            </div>

            <!-- Doanh thu theo tháng -->
            <div class="col-md-4">
                <div class="card h-100" style="background: linear-gradient(135deg, #50C878, #657665); border-radius: 15px; color: #fff; transition: all 0.3s ease;">
                    <div class="card-body text-center d-flex flex-column justify-content-center">
                        <h5 class="card-title"><i class="fas fa-calendar-alt mr-2 text-yellow"></i> Doanh thu theo tháng</h5>
                        @if (!Model.MonthlyRevenue.Any())
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu.</p>
                        }
                        else
                        {
                            <canvas id="monthlyRevenueChart" style="height: 200px;"></canvas>
                        }
                    </div>
                </div>
            </div>

            <!-- Doanh thu theo năm -->
            <div class="col-md-4">
                <div class="card h-100" style="background: linear-gradient(135deg, #e23a3a, #e58d85); border-radius: 15px; color: #fff; transition: all 0.3s ease;">
                    <div class="card-body text-center d-flex flex-column justify-content-center">
                        <h5 class="card-title"><i class="fas fa-history mr-2 text-green"></i> Doanh thu theo năm</h5>
                        @if (!Model.YearlyRevenue.Any())
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu.</p>
                        }
                        else
                        {
                            <canvas id="yearlyRevenueChart" style="height: 200px;"></canvas>
                        }
                    </div>
                </div>
            </div>

            <!-- Chi tiết doanh thu theo ngày -->
            <div class="col-12 mt-4">
                <div class="card" style="background: linear-gradient(135deg, #3f5e83, #6ddfbb); border-radius: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-white d-flex align-items-center"><i class="fas fa-list-ul mr-2"></i> Chi tiết doanh thu theo ngày</h5>
                        @if (!Model.DailyRevenueDetails.Any() || Model.DailyRevenueDetails.All(r => r.TotalRevenue == 0))
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu trong khoảng thời gian đã chọn.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-dark">
                                    <thead>
                                        <tr>
                                            <th scope="col"><i class="fas fa-calendar-day text-info mr-2"></i>Ngày</th>
                                            <th scope="col"><i class="fas fa-money-bill-wave text-success mr-2"></i>Thanh toán Tiền mặt (VNĐ)</th>
                                            <th scope="col"><i class="fas fa-qrcode text-info mr-2"></i>Thanh toán VietQR (VNĐ)</th>
                                            <th scope="col">
                                                <i class="@(Model?.ReportType == "Contracts" ? "fas fa-file-contract text-primary" : "fas fa-shopping-cart text-warning") mr-2"></i>
                                                @(Model?.ReportType == "Contracts" ? "Doanh thu hợp đồng (VNĐ)" : "Doanh thu đơn hàng (VNĐ)")
                                            </th>
                                            <th scope="col"><i class="fas fa-coins text-gold mr-2"></i>Tổng doanh thu (VNĐ)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.DailyRevenueDetails.Join(Model.DailyPaymentDetails,
                                       dr => dr.Day, dp => dp.Day,
                                       (dr, dp) => new { dr.Day, dp.CashAmount, dp.VietQRAmount, dr.OrderRevenue, dr.ContractRevenue, dr.TotalRevenue }))
                                        {
                                            <tr>
                                                <td>@item.Day</td>
                                                <td>@item.CashAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@item.VietQRAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@(Model.ReportType == "Contracts" ? item.ContractRevenue.ToString("N0").Replace(",", ".") : item.OrderRevenue.ToString("N0").Replace(",", "."))</td>
                                                <td>@item.TotalRevenue.ToString("N0").Replace(",", ".")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Chi tiết doanh thu theo tháng -->
            <div class="col-12 mt-4">
                <div class="card" style="background: linear-gradient(135deg, #50C878, #657665); border-radius: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-white d-flex align-items-center"><i class="fas fa-list-ul mr-2"></i> Chi tiết doanh thu theo tháng</h5>
                        @if (!Model.MonthlyRevenueDetails.Any())
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu trong khoảng thời gian đã chọn.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-dark">
                                    <thead>
                                        <tr>
                                            <th scope="col"><i class="fas fa-calendar-alt text-info mr-2"></i>Tháng</th>
                                            <th scope="col"><i class="fas fa-money-bill-wave text-success mr-2"></i>Thanh toán Tiền mặt (VNĐ)</th>
                                            <th scope="col"><i class="fas fa-qrcode text-info mr-2"></i>Thanh toán VietQR (VNĐ)</th>
                                            <th scope="col">
                                                <i class="@(Model?.ReportType == "Contracts" ? "fas fa-file-contract text-primary" : "fas fa-shopping-cart text-warning") mr-2"></i>
                                                @(Model?.ReportType == "Contracts" ? "Doanh thu hợp đồng (VNĐ)" : "Doanh thu đơn hàng (VNĐ)")
                                            </th>
                                            <th scope="col"><i class="fas fa-coins text-gold mr-2"></i>Tổng doanh thu (VNĐ)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.MonthlyRevenueDetails.Join(Model.MonthlyPaymentDetails,
                                       mr => mr.Month, mp => mp.Month,
                                       (mr, mp) => new { mr.Month, mp.CashAmount, mp.VietQRAmount, mr.OrderRevenue, mr.ContractRevenue, mr.TotalRevenue }))
                                        {
                                            <tr>
                                                <td>@item.Month</td>
                                                <td>@item.CashAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@item.VietQRAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@(Model.ReportType == "Contracts" ? item.ContractRevenue.ToString("N0").Replace(",", ".") : item.OrderRevenue.ToString("N0").Replace(",", "."))</td>
                                                <td>@item.TotalRevenue.ToString("N0").Replace(",", ".")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Chi tiết doanh thu theo năm -->
            <div class="col-12 mt-4">
                <div class="card" style="background: linear-gradient(135deg, #e23a3a, #e58d85); border-radius: 15px;">
                    <div class="card-body">
                        <h5 class="card-title text-white d-flex align-items-center"><i class="fas fa-list-ul mr-2"></i> Chi tiết doanh thu theo năm</h5>
                        @if (!Model.YearlyRevenueDetails.Any())
                        {
                            <p class="text-white-50">Không có dữ liệu doanh thu trong khoảng thời gian đã chọn.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-dark">
                                    <thead>
                                        <tr>
                                            <th scope="col"><i class="fas fa-calendar-year text-info mr-2"></i>Năm</th>
                                            <th scope="col"><i class="fas fa-money-bill-wave text-success mr-2"></i>Thanh toán Tiền mặt (VNĐ)</th>
                                            <th scope="col"><i class="fas fa-qrcode text-info mr-2"></i>Thanh toán VietQR (VNĐ)</th>
                                            <th scope="col">
                                                <i class="@(Model?.ReportType == "Contracts" ? "fas fa-file-contract text-primary" : "fas fa-shopping-cart text-warning") mr-2"></i>
                                                @(Model?.ReportType == "Contracts" ? "Doanh thu hợp đồng (VNĐ)" : "Doanh thu đơn hàng (VNĐ)")
                                            </th>
                                            <th scope="col"><i class="fas fa-coins text-gold mr-2"></i>Tổng doanh thu (VNĐ)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.YearlyRevenueDetails.Join(Model.YearlyPaymentDetails,
                                       yr => yr.Year, yp => yp.Year,
                                       (yr, yp) => new { yr.Year, yp.CashAmount, yp.VietQRAmount, yr.OrderRevenue, yr.ContractRevenue, yr.TotalRevenue }))
                                        {
                                            <tr>
                                                <td>@item.Year</td>
                                                <td>@item.CashAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@item.VietQRAmount.ToString("N0").Replace(",", ".")</td>
                                                <td>@(Model.ReportType == "Contracts" ? item.ContractRevenue.ToString("N0").Replace(",", ".") : item.OrderRevenue.ToString("N0").Replace(",", "."))</td>
                                                <td>@item.TotalRevenue.ToString("N0").Replace(",", ".")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <!-- [ Main Content ] end -->
    </div>
</div>

<!-- Scripts cho biểu đồ -->
@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function createChart(ctx, labels, data, label, borderColor) {
                try {
                    console.log(`Creating chart for ${label}: Labels: ${JSON.stringify(labels)}, Data: ${JSON.stringify(data)}`); // Debug log
                    if (!labels || !data || labels.length === 0 || data.length === 0) {
                        console.warn(`No data available for ${label}`);
                        return;
                    }

                    return new Chart(ctx, {
                        type: 'line', // Biểu đồ đường
                        data: {
                            labels: labels,
                            datasets: [{
                                label: label,
                                data: data,
                                borderColor: borderColor, // Màu đường
                                backgroundColor: `${borderColor}40`, // Màu vùng dưới đường (thêm độ trong suốt)
                                borderWidth: 2,
                                fill: true, // Tạo hiệu ứng khu vực nhẹ
                                tension: 0.3, // Độ cong mượt mà
                                pointBackgroundColor: '#fff', // Màu nền điểm
                                pointBorderColor: borderColor, // Màu viền điểm
                                pointRadius: 4, // Kích thước điểm
                                pointHoverRadius: 6 // Kích thước điểm khi hover
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            plugins: {
                                legend: { display: false },
                                tooltip: {
                                    callbacks: {
                                        label: function (context) {
                                            let label = context.dataset.label || '';
                                            if (label) {
                                                label += ': ';
                                            }
                                            label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.raw);
                                            return label;
                                        }
                                    },
                                    backgroundColor: 'rgba(0, 0, 0, 0.9)',
                                    titleColor: '#fff',
                                    bodyColor: '#fff',
                                    borderColor: 'rgba(255, 255, 255, 0.2)',
                                    borderWidth: 1
                                }
                            },
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        color: '#fff',
                                        callback: function (value) {
                                            return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);
                                        }
                                    },
                                    grid: { color: 'rgba(255, 255, 255, 0.2)' }
                                },
                                x: {
                                    ticks: { color: '#fff' },
                                    grid: { color: 'rgba(255, 255, 255, 0.2)' }
                                }
                            }
                        }
                    });
                } catch (error) {
                    console.error(`Lỗi khi tạo biểu đồ ${label}:`, error);
                    return null;
                }
            }

            // Daily Revenue Chart
            const ctxDaily = document.getElementById('dailyRevenueChart')?.getContext('2d');
            if (ctxDaily) {
                const dailyLabels = @Html.Raw(Json.Serialize(Model.DailyRevenue.Any() ? Model.DailyRevenue.Select(r => r.Day) : Model.DailyRevenueDetails.Select(r => r.Day)));
                const dailyData = @Html.Raw(Json.Serialize(Model.DailyRevenue.Any() ? Model.DailyRevenue.Select(r => r.Revenue) : Model.DailyRevenueDetails.Select(r => Model.ReportType == "Contracts" ? r.ContractRevenue : r.OrderRevenue)));
                console.log('Daily Labels:', dailyLabels);
                console.log('Daily Data:', dailyData);
                createChart(ctxDaily, dailyLabels, dailyData, 'Doanh thu Theo ngày', '#4A90E2');
            }

            // Monthly Revenue Chart
            const ctxMonthly = document.getElementById('monthlyRevenueChart')?.getContext('2d');
            if (ctxMonthly) {
                const monthlyLabels = @Html.Raw(Json.Serialize(Model.MonthlyRevenue.Any() ? Model.MonthlyRevenue.Select(r => r.Month) : Model.MonthlyRevenueDetails.Select(r => r.Month)));
                const monthlyData = @Html.Raw(Json.Serialize(Model.MonthlyRevenue.Any() ? Model.MonthlyRevenue.Select(r => r.Revenue) : Model.MonthlyRevenueDetails.Select(r => Model.ReportType == "Contracts" ? r.ContractRevenue : r.OrderRevenue)));
                console.log('Monthly Labels:', monthlyLabels);
                console.log('Monthly Data:', monthlyData);
                createChart(ctxMonthly, monthlyLabels, monthlyData, 'Doanh thu Theo tháng', '#50C878');
            }

            // Yearly Revenue Chart
            const ctxYearly = document.getElementById('yearlyRevenueChart')?.getContext('2d');
            if (ctxYearly) {
                const yearlyLabels = @Html.Raw(Json.Serialize(Model.YearlyRevenue.Any() ? Model.YearlyRevenue.Select(r => r.Year) : Model.YearlyRevenueDetails.Select(r => r.Year)));
                const yearlyData = @Html.Raw(Json.Serialize(Model.YearlyRevenue.Any() ? Model.YearlyRevenue.Select(r => r.Revenue) : Model.YearlyRevenueDetails.Select(r => Model.ReportType == "Contracts" ? r.ContractRevenue : r.OrderRevenue)));
                console.log('Yearly Labels:', yearlyLabels);
                console.log('Yearly Data:', yearlyData);
                createChart(ctxYearly, yearlyLabels, yearlyData, 'Doanh thu Theo năm', '#E57373');
            }
        });
    </script>
}